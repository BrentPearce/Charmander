%!PS-Adobe-3.0
%%Title: tridiagonal_matrix.cpp
%%For: Unknown User
%%Creator: a2ps version 4.14
%%CreationDate: Sat Apr 21 16:46:34 2018
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 5
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 792 def
/sw 612 def
/llx 24 def
/urx 588 def
/ury 768 def
/lly 24 def
/#copies 1 def
/th 20.000000 def
/fnfs 15 def
/bfs 11.547912 def
/cw 6.928747 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   689.410325 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(tridiagonal_matrix.h) str
(") p n
() N
(tridiagonal_matrix::tridiagonal_matrix\() S
(int) k
( m\)) p n
({) N
() S 8 T (dimension = m;) N
() S 8 T (diag.resize\(m\);) N
() S 8 T (upperdiag.resize\(m - 1\);) N
() S 8 T (lowerdiag.resize\(m - 1\);) N
() S 8 T (hatupperdiag.resize\(m - 1\);) N
() S 8 T (r.resize\(m - 1\);) N
() S 8 T (transformed = false;) N
() N
(}) N
() N
(int) k
( tridiagonal_matrix::get_dimension\(\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( dimension;) p n
(}) N
() N
(void) k
( tridiagonal_matrix::set_diagonal_entry\() p
(int) k
( i, ) p
(double) k
( val\)) p n
({) N
() S 8 T (diag[i] = val;) N
(}) N
() N
(void) k
( tridiagonal_matrix::set_upper_diagonal_entry\() p
(int) k
( i, ) p
(double) k
( val\)) p n
({) N
() S 8 T (upperdiag[i] = val;) N
(}) N
() N
(void) k
( tridiagonal_matrix::set_lower_diagonal_entry\() p
(int) k
( i, ) p
(double) k
( val\)) p n
({) N
() S 8 T (lowerdiag[i] = val;) N
(}) N
() N
(double) k
( tridiagonal_matrix::get_diagonal_entry\() p
(int) k
( i\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( diag[i];) p n
(}) N
() N
(double) k
( tridiagonal_matrix::get_upper_diagonal_entry\() p
(int) k
( i\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( upperdiag[i];) p n
(}) N
() N
(double) k
( tridiagonal_matrix::get_lower_diagonal_entry\() p
(int) k
( i\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( lowerdiag[i];) p n
(}) N
() N
(double) k
( tridiagonal_matrix::get_r_entry\() p
(int) k
( i\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( r[i];) p n
(}) N
() N
(double) k
( tridiagonal_matrix::get_hat_upper_diagonal_entry\() p
(int) k
( i\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( hatupperdiag[i];) p n
(}) N
() N
(tridiagonal_matrix.cpp) (Page 1/5) (Apr 16, 18 15:54) title
border
grestore
(Printed by Unknown User) rhead
() (1/5) (Saturday April 21, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(bool tridiagonal_matrix::is_transformed\(\) ) p
(const) K n
({) p n
() S 8 T () S
(return) K
( transformed;) p n
(}) N
() N
(void) k
( tridiagonal_matrix::add_to_diagonal_entry\() p
(int) k
( i, ) p
(double) k
( val\)) p n
({) N
() S 8 T (diag[i] += val;) N
(}) N
() N
(void) k
( tridiagonal_matrix::add_to_upper_diagonal_entry\() p
(int) k
( i, ) p
(double) k
( val\)) p n
({) N
() S 8 T (upperdiag[i] += val;) N
(}) N
() N
(void) k
( tridiagonal_matrix::add_to_lower_diagonal_entry\() p
(int) k
( i, ) p
(double) k
( val\)) p n
({) N
() S 8 T (lowerdiag[i] += val;) N
(}) N
() N
(// this is how the matrix is transformed into upper daigonal) c n
(void) k
( tridiagonal_matrix::transform\(\)) p n
({) N
() S 8 T () S
(// Check to see if tridiag matrix has already been transformed) c n
() p 8 T () S
(if) K
( \(transformed\)) p n
() S 8 T ({) N
() S 8 T () S 16 T () S
(return) K
(;) p n
() S 8 T (}) N
() N
() S 8 T () S
(// Implement the transformation here. Fill r and hatupperdiag) c n
() p n
() N
() S 8 T () S
(//create hatupperdiag[0]) c n
() p 8 T (hatupperdiag[0] = upperdiag[0] / diag[0];) N
() N
() S 8 T () S
(// for loop to create r[i-1] and and hatupperdaig[i], i=1...i=dimension-) c n
(2) N
() p 8 T () S
(for) K
( \() p
(int) k
( i = 1; i ) p
(\243) sy
( dimension - 2; i++\)) p n
() S 8 T ({) N
() S 8 T () S 16 T () S
(// create r[i-1]) c n
() p 8 T () S 16 T (r[i - 1] = diag[i] - lowerdiag[i - 1] * hatupperdiag[i - 1];) N
() S 8 T () S 16 T () S
(// create hatupperdaig[i]) c n
() p 8 T () S 16 T (hatupperdiag[i] = upperdiag[i] / r[i - 1];) N
() S 8 T (}) N
() N
() S 8 T () S
(// create r[m-2]) c n
() p 8 T (r[dimension - 2] = diag[dimension - 1] - lowerdiag[dimension - 2] * hatu) N
(pperdiag[dimension - 2];) N
() N
() N
() S 8 T () S
(////!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*) c n
() p 8 T () S
(////Print out of  e_hat to test transform function) c n
() p 8 T () S
(//cout << "hatupperdiag = \(";) c n
() p 8 T () S
(//for \(int i = 0; i < dimension - 1; i++\)) c n
() p 8 T () S
(//{) c n
() p 8 T () S
(//) c 16 T (cout << hatupperdiag[i] << ",";) N
() p 8 T () S
(//}) c n
() p 8 T () S
(//cout << "\)" << endl;) c n
() p 8 T () S
(////!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*) c n
(tridiagonal_matrix.cpp) (Page 2/5) (Apr 16, 18 15:54) title
border
grestore
(Printed by Unknown User) rhead
() (Saturday April 21, 2018) (2/5) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 3
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T (transformed = true;) N
(}) N
() N
(//given vector rhs, return sol satisfying A sol = rhs.) c n
() p n
(vector <) S
(double) k
(>  tridiagonal_matrix::solve_linear_system\() p
(const) K
( vector <) p
(double) k
(> &) p n
( rhs\) ) S
(const) K n
({) p n
() S 8 T () N
() N
() S 8 T (vector<) S
(double) k
(> hatrhs\(dimension\); ) p
(// modified rhs) c n
() p n
() S 8 T (vector<) S
(double) k
(> sol\(dimension\); ) p
(// this is where the soln is stored) c n
() p n
(    ) S
(// Implement the calculation of hatrhs and the backward solve) c n
() p n
() S 8 T () S
(// Calculate hatrhs) c n
() p n
() S 8 T () S
(// Calculate hatrhs[0]) c n
() p 8 T (hatrhs[0] = rhs[0] / diag[0];) N
() N
() S 8 T () S
(// Calculate hatrhs[1] to hatrhs[m-2]) c n
() p n
() S 8 T () S
(for) K
( \() p
(int) k
( i = 1; i ) p
(\243) sy
( dimension - 2; i++\)) p n
() S 8 T ({) N
() S 8 T () S 16 T (hatrhs[i] = \(rhs[i] - \(lowerdiag[i - 1] * hatrhs[i - 1]\)\) / r[i ) N
(- 1];) N
() S 8 T (}) N
() N
() S 8 T () S
(// Calculate hatrhs[m-1]) c n
() p n
() S 8 T (hatrhs[dimension - 1] = \(rhs[dimension - 1] - \(lowerdiag[dimension - 2] ) N
(* hatrhs[dimension - 2]\)\) / r[dimension - 2];) N
() N
() N
() S 8 T () S
(////!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*) c n
() p 8 T () S
(////Print out of  hatrhs to test solve linear system function) c n
() p 8 T () S
(//cout << "hatrhs = \(";) c n
() p 8 T () S
(//for \(int i = 0; i <= dimension - 1; i++\)) c n
() p 8 T () S
(//{) c n
() p 8 T () S
(//) c 16 T (cout << hatrhs[i] << ",";) N
() p 8 T () S
(//}) c n
() p 8 T () S
(//cout << "\)" << endl;) c n
() p 8 T () S
(////!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*!*) c n
() p n
() N
() N
() S 8 T () S
(// Calculate sol[m-1] to Sol[0]) c n
() p n
() S 8 T () S
(//Assign sol[dimesion-1]) c n
() p 8 T (sol[dimension - 1] = hatrhs[dimension - 1];) N
() N
() S 8 T () S
(//calculate and assign sol[m-2] to sol[0]) c n
() p 8 T () S
(for) K
( \() p
(int) k
( i = dimension - 2; i ) p
(\263) sy
( 0; i--\)) p n
() S 8 T ({) N
() S 8 T () S 16 T (sol[i] = hatrhs[i] - \(hatupperdiag[i] * sol[i + 1]\);) N
() S 8 T (}) N
() N
(tridiagonal_matrix.cpp) (Page 3/5) (Apr 16, 18 15:54) title
border
grestore
(Printed by Unknown User) rhead
() (3/5) (Saturday April 21, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 4
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(return) K
( sol;) p n
(}) N
() N
(// given vector lhs, return rhs = A lhs.) c n
(vector<) p
(double) k
(> tridiagonal_matrix::Mult\() p
(const) K
( vector<) p
(double) k
(> & lhs\) ) p
(const) K n
({) p n
() S 8 T (vector<) S
(double) k
(> rhs\(dimension, 0.0\);) p n
() N
() S 8 T () S
(// Implement the matrix-vector multiplication here.) c n
() p 8 T () S
(// Transformed vs not transformed are slightly diffrent) c n
() p n
() S 8 T () S
(// If the TDMatrix is Transformed) c n
() p 8 T () S
(if) K
( \(transformed\)) p n
() S 8 T ({) N
() S 8 T () S 16 T () S
(//since the matrix is transfomred, c_i=0 for all i=0,..,m-1) c n
() p 8 T () S 16 T () S
(// and doesn't need to be included in the function also the uppe) c n
(rdiag) N
() p 8 T () S 16 T () S
(// called for should be hatupperdiag. also since in a transforme) c n
(d) N
() p 8 T () S 16 T () S
(// Tridaigoanl matrix diag[i] =1  it can be simplified to  just) c n
() p 8 T () S 16 T () S
(// 1 * lhs[i] + hatupperdiag[i ] * lhs[i+1]) c n
() p n
() N
() S 8 T () S 16 T () S
(// calculate rhs[i] for i = 0 to i = m - 2) c n
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 1; i < dimension - 1; i++\)) p n
() S 8 T () S 16 T ({) N
() S 8 T () S 16 T () S 24 T (rhs[i] = lhs[i] + hatupperdiag[i] * lhs[i + 1];) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// calculate rhs[m-1]) c n
() p 8 T () S 16 T (rhs[dimension - 1] = lhs[dimension - 1];) N
() S 8 T (}) N
() N
() S 8 T () S
(//if TDMatrix is not transformed) c n
() p 8 T () S
(if) K
( \(transformed ) p
(\272) sy
( false\)) p n
() S 8 T ({) N
() S 8 T () S 16 T () S
(// calculate rhs[0]) c n
() p 8 T () S 16 T (rhs[0] = diag[0] * lhs[0] + upperdiag[0] * lhs[1];) N
() N
() S 8 T () S 16 T () S
(// calculate rhs[i] for i = 1 to i = m - 2) c n
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 1; i < dimension - 1; i++\)) p n
() S 8 T () S 16 T ({) N
() S 8 T () S 16 T () S 24 T (rhs[i] = lowerdiag[i - 1] * lhs[i - 1] + diag[i] * lhs[i) N
(] + upperdiag[i] * lhs[i + 1];) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// calculate rhs[m-1]) c n
() p 8 T () S 16 T (rhs[dimension - 1] = lowerdiag[dimension - 2] * lhs[dimension - ) N
(2] + diag[dimension - 1] * lhs[dimension - 1];) N
() S 8 T (}) N
() N
() N
() S 8 T () S
(return) K
( rhs;) p n
(}) N
() N
(//copy constructor) c n
(tridiagonal_matrix::tridiagonal_matrix\() p
(const) K
( tridiagonal_matrix *mat\)) p n
({) N
(tridiagonal_matrix.cpp) (Page 4/5) (Apr 16, 18 15:54) title
border
grestore
(Printed by Unknown User) rhead
() (Saturday April 21, 2018) (4/5) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 5
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (dimension = mat) S
(\256) sy
(get_dimension\(\);) p n
() S 8 T (diag.resize\(dimension\);) N
() S 8 T (upperdiag.resize\(dimension - 1\);) N
() S 8 T (lowerdiag.resize\(dimension - 1\);) N
() S 8 T (hatupperdiag.resize\(dimension - 1\);) N
() S 8 T (r.resize\(dimension - 1\);) N
() S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i<dimension; i++\)) p n
() S 8 T () S 16 T (diag[i] = mat) S
(\256) sy
(get_diagonal_entry\(i\);) p n
() S 8 T () S
(for) K
( \() p
(int) k
( i = 0; i<dimension - 1; i++\)) p n
() S 8 T ({) N
() S 8 T () S 16 T (upperdiag[i] = mat) S
(\256) sy
(get_upper_diagonal_entry\(i\);) p n
() S 8 T () S 16 T (lowerdiag[i] = mat) S
(\256) sy
(get_lower_diagonal_entry\(i\);) p n
() S 8 T (}) N
() N
() S 8 T (transformed = mat) S
(\256) sy
(is_transformed\(\);) p n
() S 8 T () S
(if) K
( \(transformed\)) p n
() S 8 T ({) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i<dimension - 1; i++\)) p n
() S 8 T () S 16 T ({) N
() S 8 T () S 16 T () S 24 T (r.push_back\(mat) S
(\256) sy
(get_r_entry\(i\)\);) p n
() S 8 T () S 16 T () S 24 T (hatupperdiag.push_back\(mat) S
(\256) sy
(get_hat_upper_diagonal_entry) p n
(\(i\)\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
() N
(//empty destructor) c n
(tridiagonal_matrix::~tridiagonal_matrix\(\)) p n
({) N
() S 8 T (;) N
(}) N
() N
(// Coment Psuedocode created by Brent) c n
(// Transform\(\) created by Shashwata excpet for line 83) N
(// solve_linear_system implemented by Shashwata) N
(// Some debuging done by Brent) N
(// Mult implemented by Brent) N
(// get_r and get_hat_upper_daig implemented by Brent) N
(// Copy Constructor implemented by Will) N
(tridiagonal_matrix.cpp) (Page 5/5) (Apr 16, 18 15:54) title
border
grestore
(Printed by Unknown User) rhead
() (5/5) (Saturday April 21, 2018) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
